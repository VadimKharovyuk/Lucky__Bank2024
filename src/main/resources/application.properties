spring.application.name=Lucky__Bank
server.port=1000

# PostgreSQL Database Configuration
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/bank
spring.datasource.username=postgres
spring.datasource.password=19111993

# JPA and Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

spring.main.allow-circular-references=true

# Google OAuth2 Client Configuration
spring.security.oauth2.client.registration.google.client-name=Google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code

#
spring.security.oauth2.client.registration.google.client-id=534429435753-9gvv6j2gt8g3fndp470pf63g5p1qmttb.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:1001/login/oauth2/code/google


# Additional Configuration
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub
